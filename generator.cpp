#include <iostream>
#include <fstream>
#include <vector> 
#include <map>
#include <cstring>
#include <iomanip>

//#include "fcm.cpp"

using namespace std;


map<string, map<string,float>> probabilities = {
                                                { "AAA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "AAC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "AAG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "AAT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "ACA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "ACC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "ACG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "ACT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "AGA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "AGC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "AGG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "AGT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "ATA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "ATC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "ATG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "ATT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CAA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CAC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CAG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CAT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CCA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CCC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CCG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CCT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CGA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CGC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CGG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CGT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CTA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CTC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CTG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "CTT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GAA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GAC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GAG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GAT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GCA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GCC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GCG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GCT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GGA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GGC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GGG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GGT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GTA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GTC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GTG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "GTT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TAA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TAC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TAG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TAT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TCA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TCC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TCG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TCT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TGA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TGC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TGG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TGT", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TTA", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TTC", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TTG", { {"A",0.25},{"C",0.25},{"G",0.25},{"T",0.25}}},
                                                { "TTT", { {"A",0.4},{"C",0.2},{"G",0.3},{"T",0.1}}},
                                            };



string getLastThreeChars(char str[]){
    int len;
    char* pos; //position of last 3 chars
    len=strlen(str); // save length of string
    pos=str+len-3; // make pos point to last char of string

    return pos;
}




int main(int argc, char *argv[]) 
{
    char str[]={"TTT"};
    string str2 = ("TTT");

    map<string, map<string,float>>::iterator p;

    int numberLetters = atoi(argv[1]);

    int i;
    for (i = 1; i <= numberLetters; ++i)
    {   
        cout << "---------------------------------------------------------\n";;

        //string lastThreeLatters = getLastThreeChars(str);
        string lastThreeLatters = (str2.substr( str2.length() - 3));
        //cout << "last 3: " << lastThreeLatters <<"\n";;

        p = probabilities.find(lastThreeLatters);
        float random = rand() % 100;
        cout << "Probabilidade: " << random <<"\n";;
        
        float prob;

        for(auto& x : probabilities) {
            if (x.first == lastThreeLatters){
                //cout << "First: " << x.first << "\n";
                prob = 0;
                for(auto&& y: x.second){
                    prob = prob + (y.second * 100);
                    //cout << "Prob1: " << prob << "\n";
                    if(random <= prob){
                        random = 1000; //para sair
                        //cout << "Vai adicionar: " << y.first << "\n";
                        str2.append(y.first);

                        //cout << "New String: " << str2 << "\n";
                        
                       
                    }
                }
            }
        }
    }
    cout << str2;

    return 0;
}